// Hero Content API Service for Frontend
const API_BASE_URL = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:8000';

export interface HeroContent {
  id: string;
  mainContent: {
    welcome: string;
    title: string;
    subtitle: string;
    cta: string;
  };
  backgroundImage: {
    url: string;
    alt: string;
  };
  centerIcon: {
    url: string;
    alt: string;
    width: number;
    height: number;
  };
  features: Array<{
    id: string;
    icon: {
      url: string;
      alt: string;
    };
    title: string;
    text: string;
    order: number;
  }>;
  buttonStyle: {
    backgroundColor: string;
    textColor: string;
    width: number;
    height: number;
    borderRadius: number;
    fontSize: number;
    fontWeight: string;
  };
  seo: {
    title: string;
    description: string;
    keywords: string[];
  };
  lastUpdated: string;
  version: string;
}

export interface ApiResponse<T> {
  success: boolean;
  data: T;
  message?: string;
}

class HeroContentService {
  private cache = new Map<string, { content: HeroContent; expiry: number }>();
  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 minutes
  private listeners = new Set<() => void>();

  private isOnline(): boolean {
    return typeof navigator !== 'undefined' ? navigator.onLine : true;
  }

  private isCacheValid(lang: string): boolean {
    const cached = this.cache.get(lang);
    return cached !== undefined && Date.now() < cached.expiry;
  }

  private getCachedContent(lang: string): HeroContent | null {
    const cached = this.cache.get(lang);
    return cached ? cached.content : null;
  }

  private setCachedContent(lang: string, content: HeroContent): void {
    this.cache.set(lang, {
      content,
      expiry: Date.now() + this.CACHE_DURATION
    });
    // Notify all listeners when cache is updated
    this.listeners.forEach(listener => listener());
  }

  // Add listener for cache updates
  addListener(listener: () => void): () => void {
    this.listeners.add(listener);
    return () => this.listeners.delete(listener);
  }

  async getHeroContent(lang: string = 'en'): Promise<HeroContent> {
    console.log(`üîç [HeroService] Requesting content for language: ${lang}`);
    console.log(`üîç [HeroService] API_BASE_URL: ${API_BASE_URL}`);
    
    // Check if we have valid cached content (including real API data)
    const cachedContent = this.getCachedContent(lang);
    if (cachedContent && cachedContent.id !== 'fallback') {
      console.log(`‚úÖ [HeroService] Cache HIT with real data for ${lang}`);
      return cachedContent;
    }

    // Try to fetch real content first
    try {
      console.log(`üîÑ [HeroService] Fetching real data for ${lang}...`);
      const response = await fetch(`${API_BASE_URL}/api/hero-content?lang=${lang}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        cache: 'no-store',
      });

      if (response.ok) {
        const result: ApiResponse<HeroContent> = await response.json();
        if (result.success && result.data) {
          console.log(`‚úÖ [HeroService] Real API data loaded for ${lang}`);
          this.setCachedContent(lang, result.data);
          return result.data;
        }
      }
      
      console.log(`‚ö†Ô∏è [HeroService] API failed, using fallback for ${lang}`);
    } catch (error) {
      console.log(`‚ùå [HeroService] API error, using fallback for ${lang}:`, error);
    }

    // Return fallback if API fails
    const fallbackContent = this.getFallbackContent(lang);
    this.setCachedContent(lang, fallbackContent);
    return fallbackContent;
  }

  private getFallbackContent(lang: string = 'en'): HeroContent {
    const fallbackContent = {
      en: {
        mainContent: {
          welcome: "WELCOME TO",
          title: "ABS TRAFIKSKOLA",
          subtitle: "Get your driving license with confidence and professional guidance. We offer comprehensive courses to help you become a safe and skilled driver.",
          cta: "Book Now"
        },
        backgroundImage: {
          alt: "ABS Trafikskola driving school background"
        },
        centerIcon: {
          alt: "ABS Trafikskola logo"
        },
        features: [
          {
            id: "feature-1",
            icon: { alt: "Experienced instructors icon" },
            title: "Experienced Instructors",
            text: "Learn from certified professionals with years of teaching experience."
          },
          {
            id: "feature-2", 
            icon: { alt: "Modern vehicles icon" },
            title: "Modern Vehicles",
            text: "Practice with well-maintained, safe, and modern training cars."
          },
          {
            id: "feature-3",
            icon: { alt: "Flexible scheduling icon" },
            title: "Flexible Scheduling",
            text: "Choose lesson times that fit your busy schedule and lifestyle."
          },
          {
            id: "feature-4",
            icon: { alt: "High success rate icon" },
            title: "High Success Rate",
            text: "Join thousands of students who passed their driving test with us."
          }
        ],
        seo: {
          title: "Professional Driving School - ABS Trafikskola",
          description: "Learn to drive with confidence at ABS Trafikskola. Professional instructors, modern vehicles, and flexible scheduling. Book your driving lessons today!"
        }
      },
      sv: {
        mainContent: {
          welcome: "V√ÑLKOMMEN TILL",
          title: "ABS TRAFIKSKOLA", 
          subtitle: "F√• ditt k√∂rkort med sj√§lvf√∂rtroende och professionell v√§gledning. Vi erbjuder omfattande kurser f√∂r att hj√§lpa dig bli en s√§ker och skicklig f√∂rare.",
          cta: "Boka Nu"
        },
        backgroundImage: {
          alt: "ABS Trafikskola trafikskola bakgrund"
        },
        centerIcon: {
          alt: "ABS Trafikskola logotyp"
        },
        features: [
          {
            id: "feature-1",
            icon: { alt: "Erfarna instrukt√∂rer ikon" },
            title: "Erfarna Instrukt√∂rer",
            text: "L√§r dig av certifierade proffs med m√•nga √•rs undervisningsexperience."
          },
          {
            id: "feature-2",
            icon: { alt: "Moderna fordon ikon" },
            title: "Moderna Fordon", 
            text: "√ñva med v√§lunderh√•llna, s√§kra och moderna utbildningsbilar."
          },
          {
            id: "feature-3",
            icon: { alt: "Flexibel schemal√§ggning ikon" },
            title: "Flexibel Schemal√§ggning",
            text: "V√§lj lektionstider som passar ditt upptagna schema och livsstil."
          },
          {
            id: "feature-4",
            icon: { alt: "H√∂g framg√•ngsgrad ikon" },
            title: "H√∂g Framg√•ngsgrad",
            text: "Anslut dig till tusentals studenter som klarade k√∂rprovet med oss."
          }
        ],
        seo: {
          title: "Professionell Trafikskola - ABS Trafikskola",
          description: "L√§r dig k√∂ra med sj√§lvf√∂rtroende p√• ABS Trafikskola. Professionella instrukt√∂rer, moderna fordon och flexibel schemal√§ggning. Boka dina k√∂rlektioner idag!"
        }
      },
      ar: {
        mainContent: {
          welcome: "ŸÖÿ±ÿ≠ÿ®ÿßŸã ÿ®ŸÉŸÖ ŸÅŸä",
          title: "ABS TRAFIKSKOLA",
          subtitle: "ÿßÿ≠ÿµŸÑ ÿπŸÑŸâ ÿ±ÿÆÿµÿ© ÿßŸÑŸÇŸäÿßÿØÿ© ÿ®ÿ´ŸÇÿ© Ÿàÿ•ÿ±ÿ¥ÿßÿØ ŸÖŸáŸÜŸä. ŸÜÿ≠ŸÜ ŸÜŸÇÿØŸÖ ÿØŸàÿ±ÿßÿ™ ÿ¥ÿßŸÖŸÑÿ© ŸÑŸÖÿ≥ÿßÿπÿØÿ™ŸÉ ŸÅŸä ÿ£ŸÜ ÿ™ÿµÿ®ÿ≠ ÿ≥ÿßÿ¶ŸÇÿßŸã ÿ¢ŸÖŸÜÿßŸã ŸàŸÖÿßŸáÿ±ÿßŸã.",
          cta: "ÿßÿ≠ÿ¨ÿ≤ ÿßŸÑÿ¢ŸÜ"
        },
        backgroundImage: {
          alt: "ÿÆŸÑŸÅŸäÿ© ŸÖÿØÿ±ÿ≥ÿ© ÿßŸÑŸÇŸäÿßÿØÿ© ABS Trafikskola"
        },
        centerIcon: {
          alt: "ÿ¥ÿπÿßÿ± ABS Trafikskola"
        },
        features: [
          {
            id: "feature-1",
            icon: { alt: "ÿ£ŸäŸÇŸàŸÜÿ© ÿßŸÑŸÖÿØÿ±ÿ®ŸäŸÜ ÿ∞ŸàŸä ÿßŸÑÿÆÿ®ÿ±ÿ©" },
            title: "ŸÖÿØÿ±ÿ®ŸàŸÜ ÿ∞ŸàŸà ÿÆÿ®ÿ±ÿ©",
            text: "ÿ™ÿπŸÑŸÖ ŸÖŸÜ ŸÖÿ≠ÿ™ÿ±ŸÅŸäŸÜ ŸÖÿπÿ™ŸÖÿØŸäŸÜ ŸÖÿπ ÿ≥ŸÜŸàÿßÿ™ ŸÖŸÜ ÿÆÿ®ÿ±ÿ© ÿßŸÑÿ™ÿØÿ±Ÿäÿ≥."
          },
          {
            id: "feature-2",
            icon: { alt: "ÿ£ŸäŸÇŸàŸÜÿ© ÿßŸÑŸÖÿ±ŸÉÿ®ÿßÿ™ ÿßŸÑÿ≠ÿØŸäÿ´ÿ©" },
            title: "ŸÖÿ±ŸÉÿ®ÿßÿ™ ÿ≠ÿØŸäÿ´ÿ©",
            text: "ÿ™ÿØÿ±ÿ® ŸÖÿπ ÿ≥Ÿäÿßÿ±ÿßÿ™ ÿ™ÿØÿ±Ÿäÿ® ÿ¢ŸÖŸÜÿ© ŸàŸÖŸèÿπÿ™ŸÜŸâ ÿ®Ÿáÿß ÿ¨ŸäÿØÿßŸã Ÿàÿ≠ÿØŸäÿ´ÿ©."
          },
          {
            id: "feature-3",
            icon: { alt: "ÿ£ŸäŸÇŸàŸÜÿ© ÿßŸÑÿ¨ÿØŸàŸÑÿ© ÿßŸÑŸÖÿ±ŸÜÿ©" },
            title: "ÿ¨ÿØŸàŸÑÿ© ŸÖÿ±ŸÜÿ©",
            text: "ÿßÿÆÿ™ÿ± ÿ£ŸàŸÇÿßÿ™ ÿßŸÑÿØÿ±Ÿàÿ≥ ÿßŸÑÿ™Ÿä ÿ™ŸÜÿßÿ≥ÿ® ÿ¨ÿØŸàŸÑŸÉ ÿßŸÑŸÖÿ≤ÿØÿ≠ŸÖ ŸàŸÜŸÖÿ∑ ÿ≠Ÿäÿßÿ™ŸÉ."
          },
          {
            id: "feature-4",
            icon: { alt: "ÿ£ŸäŸÇŸàŸÜÿ© ŸÖÿπÿØŸÑ ÿßŸÑŸÜÿ¨ÿßÿ≠ ÿßŸÑÿπÿßŸÑŸä" },
            title: "ŸÖÿπÿØŸÑ ŸÜÿ¨ÿßÿ≠ ÿπÿßŸÑŸä",
            text: "ÿßŸÜÿ∂ŸÖ ÿ•ŸÑŸâ ÿ¢ŸÑÿßŸÅ ÿßŸÑÿ∑ŸÑÿßÿ® ÿßŸÑÿ∞ŸäŸÜ ÿßÿ¨ÿ™ÿßÿ≤Ÿàÿß ÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑŸÇŸäÿßÿØÿ© ŸÖÿπŸÜÿß."
          }
        ],
        seo: {
          title: "ŸÖÿØÿ±ÿ≥ÿ© ŸÇŸäÿßÿØÿ© ŸÖŸáŸÜŸäÿ© - ABS Trafikskola",
          description: "ÿ™ÿπŸÑŸÖ ÿßŸÑŸÇŸäÿßÿØÿ© ÿ®ÿ´ŸÇÿ© ŸÅŸä ABS Trafikskola. ŸÖÿØÿ±ÿ®ŸàŸÜ ŸÖÿ≠ÿ™ÿ±ŸÅŸàŸÜÿå ŸÖÿ±ŸÉÿ®ÿßÿ™ ÿ≠ÿØŸäÿ´ÿ©ÿå Ÿàÿ¨ÿØŸàŸÑÿ© ŸÖÿ±ŸÜÿ©. ÿßÿ≠ÿ¨ÿ≤ ÿØÿ±Ÿàÿ≥ ÿßŸÑŸÇŸäÿßÿØÿ© ÿßŸÑŸäŸàŸÖ!"
        }
      }
    };

    const content = fallbackContent[lang as keyof typeof fallbackContent] || fallbackContent.en;

    return {
      id: 'fallback',
      mainContent: content.mainContent,
      backgroundImage: {
        url: '/img/hero/2.png',
        alt: content.backgroundImage.alt
      },
      centerIcon: {
        url: '/logo.svg',
        alt: content.centerIcon.alt,
        width: 518,
        height: 151
      },
      features: content.features.map((feature, index) => ({
        ...feature,
        icon: {
          url: `/img/hero/icon${index + 1}.svg`,
          alt: feature.icon.alt
        },
        order: index + 1
      })),
      buttonStyle: {
        backgroundColor: '#0063D5',
        textColor: '#FFFFFF',
        width: 200,
        height: 48,
        borderRadius: 30,
        fontSize: 18,
        fontWeight: 'medium'
      },
      seo: {
        title: content.seo.title,
        description: content.seo.description,
        keywords: ['driving school', 'k√∂rkort', 'trafikskola', 'driving lessons', 'ABS Trafikskola']
      },
      lastUpdated: new Date().toISOString(),
      version: '1.0'
    };
  }

  clearCache(): void {
    this.cache.clear();
    console.log('üóëÔ∏è Hero content cache cleared for all languages');
  }

  clearCacheForLanguage(lang: string): void {
    this.cache.delete(lang);
    console.log(`üóëÔ∏è Hero content cache cleared for language: ${lang}`);
  }

  async preloadContent(lang: string = 'en'): Promise<void> {
    try {
      await this.getHeroContent(lang);
      console.log(`‚ö° Hero content preloaded successfully for language: ${lang}`);
    } catch (error) {
      console.error(`‚ùå Failed to preload hero content for language ${lang}:`, error);
    }
  }
}

// Export singleton instance
const heroContentService = new HeroContentService();
export default heroContentService;
